apiVersion: apps/v1
kind: Deployment
metadata:
  name: report-viewer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: report-viewer
  template:
    metadata:
      labels:
        app: report-viewer
    spec:
      containers:
        - name: nginx
          image: nginx:alpine
          volumeMounts:
            - name: reports
              mountPath: /usr/share/nginx/html
          command: ["/bin/sh", "-c"]
          args:
            - |
              # Fix permissions first (shared group for ZAP and NGINX)
              addgroup -g 1001 zapgroup && \
              adduser nginx zapgroup && \
              chown -R :zapgroup /usr/share/nginx/html && \
              chmod -R 775 /usr/share/nginx/html && \
              
              # Remove default NGINX config
              rm -f /etc/nginx/conf.d/default.conf && \
              
              # Create optimized config
              cat > /etc/nginx/conf.d/reports.conf <<'EOF'
              server {
                  listen 80;
                  server_name _;
                  underscores_in_headers on;
              
                  location / {
                      root /usr/share/nginx/html;
                      autoindex on;
                      autoindex_exact_size off;
                      autoindex_localtime on;
                      sendfile off;
              
                      # Allow all
                      satisfy any;
                      allow all;
              
                      # Security headers
                      add_header X-Frame-Options "SAMEORIGIN";
                      add_header X-Content-Type-Options "nosniff";
                  }
              }
              EOF
              
              # Fix permissions (again, in case volume was empty)
              chown -R 101:zapgroup /usr/share/nginx/html && \
              chmod -R 775 /usr/share/nginx/html && \
              
              # Start NGINX
              exec nginx -g 'daemon off; error_log /dev/stderr debug;'
          ports:
            - containerPort: 80
      volumes:
        - name: reports
          persistentVolumeClaim:
            claimName: zap-reports-pvc