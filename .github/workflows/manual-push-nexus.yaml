name: Manual - Build, Scan, and Push Docker Image to Nexus (Per-user Login)

on:
  workflow_dispatch:
    inputs:
      nexus_repo_url:
        description: 'Nexus repository URL (e.g., 192.168.127.2:30500/myrepo)'
        required: true
        type: string
      image_name:
        description: 'Docker image name'
        required: true
        type: string
      image_tag:
        description: 'Docker image tag'
        required: true
        type: string
      nexus_username:
        description: 'Nexus username'
        required: true
        type: string
      nexus_password:
        description: 'Nexus password'
        required: true
        type: string

jobs:
  build-and-push:
    runs-on: self-hosted

    env:
      NEXUS_REPO_URL: ${{ github.event.inputs.nexus_repo_url }}
      IMAGE_NAME: ${{ github.event.inputs.image_name }}
      IMAGE_TAG: ${{ github.event.inputs.image_tag }}
      NEXUS_USERNAME: ${{ github.event.inputs.nexus_username }}
      NEXUS_PASSWORD: ${{ github.event.inputs.nexus_password }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build Java application with Maven
        run: mvn clean package -DskipTests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract registry host:port
        id: registry
        shell: powershell
        run: |
          $hostport = $env:NEXUS_REPO_URL.Split('/')[0]
          Add-Content -Path $env:GITHUB_OUTPUT -Value "HOSTPORT=$hostport"

      - name: Log in to Nexus Docker registry
        uses: docker/login-action@v3
        with:
          registry: ${{ steps.registry.outputs.HOSTPORT }}
          username: ${{ env.NEXUS_USERNAME }}
          password: ${{ env.NEXUS_PASSWORD }}

      - name: Build Docker image
        shell: powershell
        run: |
          $tag = "${env:NEXUS_REPO_URL}/${env:IMAGE_NAME}:${env:IMAGE_TAG}"
          docker build -t "$tag" .

      - name: Download Trivy CLI
        shell: powershell
        run: |
          $trivyVersion = "0.63.0"
          $trivyZip = "trivy_${trivyVersion}_Windows-64bit.zip"
          $trivyUrl = "https://github.com/aquasecurity/trivy/releases/download/v${trivyVersion}/$trivyZip"
          Invoke-WebRequest -Uri $trivyUrl -OutFile $trivyZip
          Expand-Archive $trivyZip -DestinationPath "$PWD\trivy"
          $env:PATH += ";$PWD\trivy"

      - name: Scan Docker image with Trivy
        shell: powershell
        run: |
          $tag = "${env:NEXUS_REPO_URL}/${env:IMAGE_NAME}:${env:IMAGE_TAG}"
          .\trivy\trivy.exe image --severity CRITICAL,HIGH --exit-code 1 $tag

      - name: Push Docker image to Nexus
        if: ${{ success() }}
        shell: powershell
        run: |
          $tag = "${env:NEXUS_REPO_URL}/${env:IMAGE_NAME}:${env:IMAGE_TAG}"
          docker push "$tag"