name: Build, Scan, and Push Docker Image to Nexus

on:
  workflow_dispatch:
    inputs:
      nexus_repo_url:
        description: 'Nexus repository URL (e.g., 192.168.127.2:30500/myrepo)'
        required: true
        type: string
      image_name:
        description: 'Docker image name'
        required: true
        type: string
      image_tag:
        description: 'Docker image tag'
        required: true
        type: string

jobs:
  build-and-push:
    runs-on: self-hosted

    env:
      NEXUS_REPO_URL: ${{ github.event.inputs.nexus_repo_url }}
      IMAGE_NAME: ${{ github.event.inputs.image_name }}
      IMAGE_TAG: ${{ github.event.inputs.image_tag }}
      NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
      NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build Java application with Maven
        run: mvn clean package -DskipTests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract registry host:port
        id: registry
        run: |
          echo "HOSTPORT=$(echo $NEXUS_REPO_URL | cut -d/ -f1)" >> $GITHUB_OUTPUT

      - name: Log in to Nexus Docker registry
        uses: docker/login-action@v3
        with:
          registry: ${{ steps.registry.outputs.HOSTPORT }}
          username: ${{ env.NEXUS_USERNAME }}
          password: ${{ env.NEXUS_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t "${NEXUS_REPO_URL}/${IMAGE_NAME}:${IMAGE_TAG}" .

      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@0.31.0
        with:
          image-ref: "${{ env.NEXUS_REPO_URL }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"
          severity: 'CRITICAL,HIGH'
          exit-code: '1'

      - name: Push Docker image to Nexus
        if: ${{ success() }}
        run: |
          docker push "${NEXUS_REPO_URL}/${IMAGE_NAME}:${IMAGE_TAG}"